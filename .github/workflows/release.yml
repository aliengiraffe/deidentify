name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Run workflow on version tags, e.g. v1.0.0, v20.15.10

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
      
      - name: Verify dependencies
        run: go mod verify

      - name: Run tests
        run: go test -v -race ./...
      
      - name: Run Go build to ensure everything compiles
        run: go build -v ./...
      
      - name: Set release version
        id: set_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ env.VERSION }}^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            echo "## First Release: ${{ env.VERSION }}" > changelog.txt
            echo "" >> changelog.txt
            git log --pretty=format:"* %s (%h)" >> changelog.txt
          else
            echo "## Changes from $PREV_TAG to ${{ env.VERSION }}" > changelog.txt
            echo "" >> changelog.txt
            git log --pretty=format:"* %s (%h)" $PREV_TAG..${{ env.VERSION }} >> changelog.txt
          fi
          {
            echo 'CHANGELOG<<EOF'
            cat changelog.txt
            echo 'EOF'
          } >> $GITHUB_ENV
          
      - name: Generate Module documentation
        run: |
          go install golang.org/x/tools/cmd/godoc@latest
          mkdir -p docs/api
          $(go env GOPATH)/bin/godoc -url=/pkg/github.com/aliengiraffe/deidentify/ > docs/api/index.html

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
          files: |
            LICENSE
            README.md
            docs/api/index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-gpr:
    name: Publish to Go Proxy
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      
      - name: Publish Go module
        run: |
          # GOPROXY will pick up new module version automatically
          # We ensure the tag is properly formatted and has associated code
          GOPROXY=proxy.golang.org go list -m github.com/aliengiraffe/deidentify@${{ github.ref_name }}